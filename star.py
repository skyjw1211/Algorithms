
def concat(r1, r2):
    return [''.join(x) for x in zip(r1, r2, r1)] #zip: ['*', '*', '*'], [' ', ' ', ' '], ['*', '*', '*'] -> [('*', ' ', '*'), ('*', ' ', '*'), ('*', ' ', '*')]
                                                 #join: [('*', ' ', '*'), ('*', ' ', '*'), ('*', ' ', '*')] -> ['* *', '* *', '* *']
def starPrint(n):
    if n == 1:
        return ['*']
    n //= 3
    x = starPrint(n)
    a = concat(x, x) #맨 위와 맨 아래 패턴
    b = concat(x, [' '*n]*n) #중간에 빈 공간 패턴, 두 번째 *n은 x의 개수를 맞춰주기 위해 -> zip에서 각 원소의 개수가 일치해야 한다. 
 
    return a + b + a #리스트를 합하여 리턴
 
print('\n'.join(starPrint(int(input()))))

##
##***
##* *
##***
##
##*********
##* ** ** *
##*********
##***   ***
##* *   * *
##***   ***
##*********
##* ** ** *
##*********
##
##